import tkinter as tk
from tkinter import ttk  # Import ttk for the Progressbar
import math as m
import time
import random
from threading import Thread

def get_world_population():
    # Use the provided number as the total world population
    try:
        population = "811771188854982"  # Provided number as a string
        return int(population)
    except ValueError:
        return "Invalid population number"

def human(initial_population, children_per_person, years_between_kids, lifespan, years_future):
    humans = initial_population * (children_per_person / 2)**(years_future / years_between_kids) * (m.e)**(-years_future / lifespan)
    return int(humans)

def calculate_population():
    def perform_calculation():
        # Display the "Cooking numbers" message and show the progress bar
        result_label.config(text="Cooking some numbers, please wait...")
        progress_bar.grid(row=6, column=0, columnspan=2)

        # Set a random delay between 1 and 20 seconds
        total_time = random.uniform(1, 5)
        step_time = total_time / 100  # Divide the total time into 100 steps

        for i in range(101):  # Simulate progress bar
            progress_bar["value"] = i
            time.sleep(step_time)  # Sleep for the calculated step time

        try:
            initial_population = get_world_population()
            if isinstance(initial_population, str):  # Check if get_world_population returned an error message
                result_label.config(text=initial_population)  # Display the error message
                progress_bar.grid_remove()
                return
            children = float(children_entry.get())
            years_between = float(years_between_entry.get())
            lifespan = float(lifespan_entry.get())
            years = float(years_future_entry.get())

            result = human(initial_population, children, years_between, lifespan, years)
            result_label.config(text=f"Estimated population: {result}")
        except ValueError:
            result_label.config(text="Invalid input. Please enter numbers.")
        except Exception as e:
            result_label.config(text=f"An error occurred: {e}")
        finally:
            progress_bar.grid_remove()

    # Run the calculation in a separate thread to avoid freezing the GUI
    Thread(target=perform_calculation).start()

# GUI setup
window = tk.Tk()
window.title("Future Population Calculatorinator 9000")

# Input labels and entries
children_label = tk.Label(window, text="How many mistakes do you want?:")
children_label.grid(row=0, column=0)
children_entry = tk.Entry(window)
children_entry.grid(row=0, column=1)

years_between_label = tk.Label(window, text="How many years between the creation of your mistakes?:")
years_between_label.grid(row=1, column=0)
years_between_entry = tk.Entry(window)
years_between_entry.grid(row=1, column=1)

lifespan_label = tk.Label(window, text="What's the average lifespan of your mistakes?:")
lifespan_label.grid(row=2, column=0)
lifespan_entry = tk.Entry(window)
lifespan_entry.grid(row=2, column=1)

years_future_label = tk.Label(window, text="How many years into future?:")
years_future_label.grid(row=3, column=0)
years_future_entry = tk.Entry(window)
years_future_entry.grid(row=3, column=1)

# Calculate button
calculate_button = tk.Button(window, text="Calculate", command=calculate_population)
calculate_button.grid(row=4, column=0, columnspan=2)

# Result label
result_label = tk.Label(window, text="")
result_label.grid(row=5, column=0, columnspan=2)

# Progress bar
progress_bar = ttk.Progressbar(window, orient="horizontal", length=300, mode="determinate")
progress_bar.grid(row=6, column=0, columnspan=2)
progress_bar.grid_remove()  # Hide the progress bar initially

# Start the Tkinter event loop
window.mainloop()