import tkinter as tk
import math as m
import requests
from bs4 import BeautifulSoup

def get_world_population():
    url = 'https://www.worldometers.info/world-population/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    population = soup.find('div', class_='col-md-8 country-pop-description').find('strong').text.replace(',', '') # remove commas
    return int(population)

def human(initial_population, children_per_person, years_between_kids, lifespan, years_future):
    humans = initial_population * (children_per_person / 2)**(years_future / years_between_kids) * (m.e)**(-years_future / lifespan)
    return int(humans)

def calculate_population():
    try:
        initial_population = get_world_population()
        children = float(children_entry.get())
        years_between = float(years_between_entry.get())
        lifespan = float(lifespan_entry.get())
        years = float(years_future_entry.get())

        result = human(initial_population, children, years_between, lifespan, years)
        result_label.config(text=f"Estimated population: {result}")
    except ValueError:
        result_label.config(text="Invalid input. Please enter numbers.")
    except Exception as e:
        result_label.config(text=f"An error occurred: {e}")

# GUI setup
window = tk.Tk()
window.title("Future Population Calculator")

# Input labels and entries
children_label = tk.Label(window, text="Children per person:")
children_label.grid(row=0, column=0)
children_entry = tk.Entry(window)
children_entry.grid(row=0, column=1)

years_between_label = tk.Label(window, text="Years between kids:")
years_between_label.grid(row=1, column=0)
years_between_entry = tk.Entry(window)
years_between_entry.grid(row=1, column=1)

lifespan_label = tk.Label(window, text="Average lifespan:")
lifespan_label.grid(row=2, column=0)
lifespan_entry = tk.Entry(window)
lifespan_entry.grid(row=2, column=1)

years_future_label = tk.Label(window, text="Years into future:")
years_future_label.grid(row=3, column=0)
years_future_entry = tk.Entry(window)
years_future_entry.grid(row=3, column=1)

# Calculate button
calculate_button = tk.Button(window, text="Calculate", command=calculate_population)
calculate_button.grid(row=4, column=0, columnspan=2)

# Result label
result_label = tk.Label(window, text="")
result_label.grid(row=5, column=0, columnspan=2)

window.mainloop()